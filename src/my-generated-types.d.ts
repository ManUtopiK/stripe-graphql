/**
 * This file was automatically generated by Nexus 0.11.5
 * Do not make changes to this file directly
 */




declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
}

export interface NexusGenEnums {
  CARD_FUNDING_TYPE: "credit" | "debit" | "prepaid" | "unknown"
  COUNTRY: "US"
  CURRENCY: "eur" | "gbp" | "usd"
  LEGAL_ENTITY_TYPE: "company" | "individual"
}

export interface NexusGenRootTypes {
  AccountVerificationFields: { // root type
    company: NexusGenRootTypes['VerificationFields']; // VerificationFields!
    individual: NexusGenRootTypes['VerificationFields']; // VerificationFields!
  }
  AdditionalOwner: { // root type
    address?: NexusGenRootTypes['Address'] | null; // Address
    dob?: NexusGenRootTypes['Dob'] | null; // Dob
    first_name?: string | null; // String
    last_name?: string | null; // String
    maiden_name?: string | null; // String
    personal_id_number_provided: boolean; // Boolean!
  }
  Address: { // root type
    city?: string | null; // String
    country?: string | null; // String
    line1?: string | null; // String
    line2?: string | null; // String
    postal_code?: string | null; // String
    state?: string | null; // String
  }
  Balance: { // root type
    available: NexusGenRootTypes['BalanceItem'][]; // [BalanceItem!]!
    livemode: boolean; // Boolean!
    object: string; // String!
    pending: NexusGenRootTypes['BalanceItem'][]; // [BalanceItem!]!
  }
  BalanceItem: { // root type
    amount: number; // Int!
    currency: string; // String!
  }
  BalanceTransaction: { // root type
    amount?: number | null; // Int
    available_on?: number | null; // Int
    created?: number | null; // Int
    currency?: string | null; // String
    description?: string | null; // String
    exchange_rate?: number | null; // Float
    fee?: number | null; // Int
    fee_details: NexusGenRootTypes['FeeDetails'][]; // [FeeDetails!]!
    id: string; // String!
    net?: number | null; // Int
    object: string; // String!
    source?: string | null; // String
    status?: string | null; // String
    type?: string | null; // String
  }
  BankAccount: { // root type
    account_holder_name?: string | null; // String
    account_holder_type?: NexusGenEnums['LEGAL_ENTITY_TYPE'] | null; // LEGAL_ENTITY_TYPE
    bank_name?: string | null; // String
    country?: string | null; // String
    currency?: string | null; // String
    customer?: string | null; // String
    fingerprint?: string | null; // String
    id: string; // ID!
    last4?: string | null; // String
    routing_number?: string | null; // String
    status?: string | null; // String
  }
  Card: { // root type
    address_city?: string | null; // String
    address_country?: string | null; // String
    address_line1?: string | null; // String
    address_line1_check?: string | null; // String
    address_line2?: string | null; // String
    address_state?: string | null; // String
    address_zip?: string | null; // String
    address_zip_check?: string | null; // String
    brand?: string | null; // String
    country?: string | null; // String
    customer?: string | null; // String
    cvc_check?: string | null; // String
    default_for_currency?: boolean | null; // Boolean
    dynamic_last4?: string | null; // String
    exp_month?: number | null; // Int
    exp_year?: number | null; // Int
    fingerprint?: string | null; // String
    funding: NexusGenEnums['CARD_FUNDING_TYPE']; // CARD_FUNDING_TYPE!
    id: string; // ID!
    last4?: string | null; // String
    name?: string | null; // String
    tokenization_method?: string | null; // String
  }
  Charge: { // root type
    amount?: number | null; // Int
    balance_transaction?: string | null; // String
    currency?: string | null; // String
    id: string; // String!
    object: string; // String!
  }
  ConnectedAccount: { // root type
    country: string; // String!
    id: string; // ID!
    legal_entity?: NexusGenRootTypes['LegalEntity'] | null; // LegalEntity
    verification: NexusGenRootTypes['ConnectedAccountVerification']; // ConnectedAccountVerification!
  }
  ConnectedAccountVerification: { // root type
    disabled_reason?: string | null; // String
    due_by?: number | null; // Int
    fields_needed?: Array<string | null> | null; // [String]
  }
  CountrySpec: { // root type
    default_currency?: string | null; // String
    id?: string | null; // String
    object?: string | null; // String
    verification_fields: NexusGenRootTypes['AccountVerificationFields']; // AccountVerificationFields!
  }
  Customer: { // root type
    email?: string | null; // String
    id: string; // ID!
  }
  Dob: { // root type
    day?: number | null; // Int
    month?: number | null; // Int
    year?: number | null; // Int
  }
  FeeDetails: { // root type
    amount?: number | null; // Int
    application?: string | null; // String
    currency?: string | null; // String
    description?: string | null; // String
    id?: string | null; // String
    type?: string | null; // String
  }
  LegalEntity: { // root type
    additional_owners: NexusGenRootTypes['AdditionalOwner'][]; // [AdditionalOwner!]!
    address?: NexusGenRootTypes['Address'] | null; // Address
    dob?: NexusGenRootTypes['Dob'] | null; // Dob
    first_name?: string | null; // String
    last_name?: string | null; // String
    maiden_name?: string | null; // String
    personal_address?: NexusGenRootTypes['Address'] | null; // Address
    personal_id_number_provided?: boolean | null; // Boolean
    type?: NexusGenEnums['LEGAL_ENTITY_TYPE'] | null; // LEGAL_ENTITY_TYPE
  }
  Platform: {};
  Query: {};
  VerificationFields: { // root type
    additional?: Array<string | null> | null; // [String]
    minimum?: Array<string | null> | null; // [String]
  }
  String: string;
  Int: number;
  Float: number;
  Boolean: boolean;
  ID: string;
}

export interface NexusGenAllTypes extends NexusGenRootTypes {
  CARD_FUNDING_TYPE: NexusGenEnums['CARD_FUNDING_TYPE'];
  COUNTRY: NexusGenEnums['COUNTRY'];
  CURRENCY: NexusGenEnums['CURRENCY'];
  LEGAL_ENTITY_TYPE: NexusGenEnums['LEGAL_ENTITY_TYPE'];
}

export interface NexusGenFieldTypes {
  AccountVerificationFields: { // field return type
    company: NexusGenRootTypes['VerificationFields']; // VerificationFields!
    individual: NexusGenRootTypes['VerificationFields']; // VerificationFields!
  }
  AdditionalOwner: { // field return type
    address: NexusGenRootTypes['Address'] | null; // Address
    dob: NexusGenRootTypes['Dob'] | null; // Dob
    first_name: string | null; // String
    last_name: string | null; // String
    maiden_name: string | null; // String
    personal_id_number_provided: boolean; // Boolean!
  }
  Address: { // field return type
    city: string | null; // String
    country: string | null; // String
    line1: string | null; // String
    line2: string | null; // String
    postal_code: string | null; // String
    state: string | null; // String
  }
  Balance: { // field return type
    available: NexusGenRootTypes['BalanceItem'][]; // [BalanceItem!]!
    livemode: boolean; // Boolean!
    object: string; // String!
    pending: NexusGenRootTypes['BalanceItem'][]; // [BalanceItem!]!
  }
  BalanceItem: { // field return type
    amount: number; // Int!
    currency: string; // String!
  }
  BalanceTransaction: { // field return type
    amount: number | null; // Int
    available_on: number | null; // Int
    created: number | null; // Int
    currency: string | null; // String
    description: string | null; // String
    exchange_rate: number | null; // Float
    fee: number | null; // Int
    fee_details: NexusGenRootTypes['FeeDetails'][]; // [FeeDetails!]!
    id: string; // String!
    net: number | null; // Int
    object: string; // String!
    source: string | null; // String
    status: string | null; // String
    type: string | null; // String
  }
  BankAccount: { // field return type
    account_holder_name: string | null; // String
    account_holder_type: NexusGenEnums['LEGAL_ENTITY_TYPE'] | null; // LEGAL_ENTITY_TYPE
    bank_name: string | null; // String
    country: string | null; // String
    currency: string | null; // String
    customer: string | null; // String
    fingerprint: string | null; // String
    id: string; // ID!
    last4: string | null; // String
    routing_number: string | null; // String
    status: string | null; // String
  }
  Card: { // field return type
    address_city: string | null; // String
    address_country: string | null; // String
    address_line1: string | null; // String
    address_line1_check: string | null; // String
    address_line2: string | null; // String
    address_state: string | null; // String
    address_zip: string | null; // String
    address_zip_check: string | null; // String
    brand: string | null; // String
    country: string | null; // String
    customer: string | null; // String
    cvc_check: string | null; // String
    default_for_currency: boolean | null; // Boolean
    dynamic_last4: string | null; // String
    exp_month: number | null; // Int
    exp_year: number | null; // Int
    fingerprint: string | null; // String
    funding: NexusGenEnums['CARD_FUNDING_TYPE']; // CARD_FUNDING_TYPE!
    id: string; // ID!
    last4: string | null; // String
    name: string | null; // String
    tokenization_method: string | null; // String
  }
  Charge: { // field return type
    amount: number | null; // Int
    balance_transaction: string | null; // String
    currency: string | null; // String
    id: string; // String!
    object: string; // String!
  }
  ConnectedAccount: { // field return type
    balance: NexusGenRootTypes['Balance']; // Balance!
    bankAccounts: NexusGenRootTypes['BankAccount'][]; // [BankAccount!]!
    cards: NexusGenRootTypes['Card'][]; // [Card!]!
    country: string; // String!
    id: string; // ID!
    legal_entity: NexusGenRootTypes['LegalEntity'] | null; // LegalEntity
    transactions: NexusGenRootTypes['BalanceTransaction'][]; // [BalanceTransaction!]!
    verification: NexusGenRootTypes['ConnectedAccountVerification']; // ConnectedAccountVerification!
  }
  ConnectedAccountVerification: { // field return type
    disabled_reason: string | null; // String
    due_by: number | null; // Int
    fields_needed: Array<string | null> | null; // [String]
  }
  CountrySpec: { // field return type
    default_currency: string | null; // String
    id: string | null; // String
    object: string | null; // String
    verification_fields: NexusGenRootTypes['AccountVerificationFields']; // AccountVerificationFields!
  }
  Customer: { // field return type
    bankAccounts: NexusGenRootTypes['BankAccount'][]; // [BankAccount!]!
    cards: NexusGenRootTypes['Card'][]; // [Card!]!
    charges: NexusGenRootTypes['Charge'][]; // [Charge!]!
    email: string | null; // String
    id: string; // ID!
  }
  Dob: { // field return type
    day: number | null; // Int
    month: number | null; // Int
    year: number | null; // Int
  }
  FeeDetails: { // field return type
    amount: number | null; // Int
    application: string | null; // String
    currency: string | null; // String
    description: string | null; // String
    id: string | null; // String
    type: string | null; // String
  }
  LegalEntity: { // field return type
    additional_owners: NexusGenRootTypes['AdditionalOwner'][]; // [AdditionalOwner!]!
    address: NexusGenRootTypes['Address'] | null; // Address
    dob: NexusGenRootTypes['Dob'] | null; // Dob
    first_name: string | null; // String
    last_name: string | null; // String
    maiden_name: string | null; // String
    personal_address: NexusGenRootTypes['Address'] | null; // Address
    personal_id_number_provided: boolean | null; // Boolean
    type: NexusGenEnums['LEGAL_ENTITY_TYPE'] | null; // LEGAL_ENTITY_TYPE
  }
  Platform: { // field return type
    balance: NexusGenRootTypes['Balance']; // Balance!
    transactions: NexusGenRootTypes['BalanceTransaction'][]; // [BalanceTransaction!]!
  }
  Query: { // field return type
    connectedAccount: NexusGenRootTypes['ConnectedAccount'] | null; // ConnectedAccount
    connectedAccounts: NexusGenRootTypes['ConnectedAccount'][]; // [ConnectedAccount!]!
    countrySpecs: NexusGenRootTypes['CountrySpec'] | null; // CountrySpec
    customer: NexusGenRootTypes['Customer'] | null; // Customer
    customers: NexusGenRootTypes['Customer'][]; // [Customer!]!
    platform: NexusGenRootTypes['Platform']; // Platform!
  }
  VerificationFields: { // field return type
    additional: Array<string | null> | null; // [String]
    minimum: Array<string | null> | null; // [String]
  }
}

export interface NexusGenArgTypes {
  Query: {
    connectedAccount: { // args
      id: string; // ID!
    }
    countrySpecs: { // args
      country: string; // String!
    }
    customer: { // args
      id: string; // ID!
    }
  }
}

export interface NexusGenAbstractResolveReturnTypes {
}

export interface NexusGenInheritedFields {}

export type NexusGenObjectNames = "AccountVerificationFields" | "AdditionalOwner" | "Address" | "Balance" | "BalanceItem" | "BalanceTransaction" | "BankAccount" | "Card" | "Charge" | "ConnectedAccount" | "ConnectedAccountVerification" | "CountrySpec" | "Customer" | "Dob" | "FeeDetails" | "LegalEntity" | "Platform" | "Query" | "VerificationFields";

export type NexusGenInputNames = never;

export type NexusGenEnumNames = "CARD_FUNDING_TYPE" | "COUNTRY" | "CURRENCY" | "LEGAL_ENTITY_TYPE";

export type NexusGenInterfaceNames = never;

export type NexusGenScalarNames = "Boolean" | "Float" | "ID" | "Int" | "String";

export type NexusGenUnionNames = never;

export interface NexusGenTypes {
  context: any;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  allTypes: NexusGenAllTypes;
  inheritedFields: NexusGenInheritedFields;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes: NexusGenTypes['objectNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['unionNames'] | NexusGenTypes['interfaceNames'] | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes']
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractResolveReturn: NexusGenAbstractResolveReturnTypes;
}