### This file was autogenerated by Nexus 0.11.6
### Do not make changes to this file directly


type Account {
  balance: Balance!
  balanceTransactions: [BalanceTransaction!]!
  bankAccounts: [BankAccount!]!
  cards: [Card!]!
  country: String!
  id: ID!
  legal_entity: LegalEntity
  verification: AccountVerification!
}

type AccountVerification {
  disabled_reason: String
  due_by: Int
  fields_needed: [String]
}

type AccountVerificationFields {
  company: VerificationFields!
  individual: VerificationFields!
}

type AdditionalOwner {
  address: Address
  dob: Dob
  first_name: String
  last_name: String
  maiden_name: String
  personal_id_number_provided: Boolean!
}

type Address {
  city: String
  country: String
  line1: String
  line2: String
  postal_code: String
  state: String
}

type Balance {
  available: [BalanceItem!]!
  livemode: Boolean!
  object: String!
  pending: [BalanceItem!]!
}

type BalanceItem {
  amount: Int!
  currency: String!
}

type BalanceTransaction {
  amount: Int
  available_on: Int
  created: Int
  currency: String
  description: String
  exchange_rate: Float
  fee: Int
  fee_details: [FeeDetails!]!
  id: String!
  net: Int
  object: String!
  source: String
  status: String
  type: String
}

type BankAccount {
  account_holder_name: String
  account_holder_type: LEGAL_ENTITY_TYPE
  bank_name: String
  country: String
  currency: String
  customer: String
  fingerprint: String
  id: ID!
  last4: String
  routing_number: String
  status: String
}

type Card {
  address_city: String
  address_country: String
  address_line1: String
  address_line1_check: String
  address_line2: String
  address_state: String
  address_zip: String
  address_zip_check: String
  brand: String
  country: String
  customer: String
  cvc_check: String
  default_for_currency: Boolean
  dynamic_last4: String
  exp_month: Int
  exp_year: Int
  fingerprint: String
  funding: CARD_FUNDING_TYPE!
  id: ID!
  last4: String
  name: String
  tokenization_method: String
}

enum CARD_FUNDING_TYPE {
  credit
  debit
  prepaid
  unknown
}

type Charge {
  amount: Int
  currency: String
  id: String!
  status: String!
}

enum COUNTRY {
  US
}

type CountrySpec {
  default_currency: String
  id: String
  object: String
  verification_fields: AccountVerificationFields!
}

enum CURRENCY {
  eur
  gbp
  usd
}

type Customer {
  bankAccounts: [BankAccount!]!
  cards: [Card!]!
  charges: [Charge!]!
  email: String
  id: ID!
}

type Dob {
  day: Int
  month: Int
  year: Int
}

type FeeDetails {
  amount: Int
  application: String
  currency: String
  description: String
  id: String
  type: String
}

type Invoice {
  amount_due: Int!
  amount_paid: Int!
  id: ID
  lines: [InvoiceLineItem!]!
}

type InvoiceLineItem {
  amount: Int!
  currency: String!
  id: ID!
  quantity: Int!
}

enum LEGAL_ENTITY_TYPE {
  company
  individual
}

type LegalEntity {
  additional_owners: [AdditionalOwner!]!
  address: Address
  dob: Dob
  first_name: String
  last_name: String
  maiden_name: String
  personal_address: Address
  personal_id_number_provided: Boolean
  type: LEGAL_ENTITY_TYPE
}

type Plan {
  amount: Int!
  currency: String!
  formattedAmount: String!
  id: ID!
  product: Product!
}

type Product {
  id: ID!
  name: String!
  plans: [Plan!]!
  type: String!
}

type Query {
  account(id: ID!): Account
  accounts: [Account!]!
  charge(id: ID!): Charge
  charges: [Charge!]!
  countrySpecs(country: String!): CountrySpec
  customer(id: ID!): Customer
  customers: [Customer!]!
  invoice(id: ID!): Invoice
  invoices: [Invoice!]!
  plan(id: ID!): Plan
  plans: [Plan!]!
  platform: Account!
  product(id: ID!): Product
  products: [Product!]!
  upcomingInvoice(customerId: ID!): Invoice
}

type VerificationFields {
  additional: [String]
  minimum: [String]
}
