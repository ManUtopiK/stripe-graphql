### This file was autogenerated by Nexus 0.11.6
### Do not make changes to this file directly


type _Subscription implements Node {
  customer: Customer!

  """Unique identifier for the object."""
  id: ID!

  """String representing the object's type."""
  object: String!
}

type Account implements Node {
  balance: Balance!
  balanceTransactions: [BalanceTransaction!]!
  bankAccounts: [BankAccount!]!
  cards: [Card!]!
  country: String!

  """Unique identifier for the object."""
  id: ID!
  legal_entity: LegalEntity

  """String representing the object's type."""
  object: String!
  verification: AccountVerification!
}

type AccountVerification {
  disabled_reason: String
  due_by: Int
  fields_needed: [String]
}

type AccountVerificationFields {
  company: VerificationFields!
  individual: VerificationFields!
}

type AdditionalOwner {
  address: Address
  dob: Dob
  first_name: String
  last_name: String
  maiden_name: String
  personal_id_number_provided: Boolean!
}

type Address {
  city: String
  country: String
  line1: String
  line2: String
  postal_code: String
  state: String
}

type Balance {
  available: [BalanceItem!]!
  livemode: Boolean!
  object: String!
  pending: [BalanceItem!]!
}

type BalanceItem {
  amount: Int!
  currency: String!
}

type BalanceTransaction implements Node {
  amount: Int
  available_on: Int
  created: Int
  currency: String
  description: String
  exchange_rate: Float
  fee: Int
  fee_details: [FeeDetails!]!

  """Unique identifier for the object."""
  id: ID!
  net: Int

  """String representing the object's type."""
  object: String!
  source: String
  status: String
  type: String
}

type BankAccount implements Node {
  account_holder_name: String
  account_holder_type: LEGAL_ENTITY_TYPE
  bank_name: String
  country: String
  currency: String
  customer: String
  fingerprint: String

  """Unique identifier for the object."""
  id: ID!
  last4: String

  """String representing the object's type."""
  object: String!
  routing_number: String
  status: String
}

type Card implements Node {
  brand: String
  country: String
  default_for_currency: Boolean
  exp_month: Int
  exp_year: Int
  funding: CARD_FUNDING_TYPE!

  """Unique identifier for the object."""
  id: ID!
  last4: String
  name: String

  """String representing the object's type."""
  object: String!
}

enum CARD_FUNDING_TYPE {
  credit
  debit
  prepaid
  unknown
}

type Charge implements Node {
  amount: Int
  currency: String

  """Unique identifier for the object."""
  id: ID!

  """String representing the object's type."""
  object: String!
  status: String!
}

enum COUNTRY {
  US
}

type CountrySpec {
  default_currency: String
  id: String
  object: String
  verification_fields: AccountVerificationFields!
}

enum CURRENCY {
  AED
  ALL
  AMD
  ANG
  AOA
  ARS
  AUD
  AWG
  AZN
  BAM
  BBD
  BDT
  BGN
  BHD
  BMD
  BND
  BOB
  BRL
  BSD
  BWP
  BYN
  BZD
  CAD
  CHF
  CLP
  CNY
  COP
  CRC
  CUP
  CVE
  CZK
  DJF
  DKK
  DOP
  DZD
  EGP
  ETB
  EUR
  FJD
  FKP
  GBP
  GEL
  GHS
  GIP
  GMD
  GNF
  GTQ
  GYD
  HKD
  HNL
  HRK
  HTG
  HUF
  IDR
  ILS
  INR
  ISK
  JMD
  JOD
  JPY
  KES
  KGS
  KHR
  KMF
  KRW
  KWD
  KYD
  KZT
  LAK
  LBP
  LKR
  LYD
  MAD
  MDL
  MKD
  MMK
  MNT
  MOP
  MRU
  MUR
  MVR
  MWK
  MXN
  MYR
  MZN
  NAD
  NGN
  NIO
  NOK
  NPR
  NZD
  OMR
  PAB
  PEN
  PGK
  PHP
  PKR
  PLN
  PYG
  QAR
  RON
  RSD
  RUB
  RWF
  SAR
  SBD
  SCR
  SEK
  SGD
  SHP
  SLL
  SOS
  STN
  SVC
  SZL
  THB
  TND
  TOP
  TRY
  TTD
  TWD
  TZS
  UAH
  UGX
  USD
  UYU
  UZS
  VEF
  VND
  VUV
  WST
  XAF
  XCD
  XOF
  XPF
  YER
  ZAR
  ZMW
}

type Customer implements Node {
  bankAccounts: [BankAccount!]!
  cards: [Card!]!
  charges: [Charge!]!

  """Time at which the object was created."""
  createdAt: DateTime!

  """The customer's email address."""
  email: String

  """Unique identifier for the object."""
  id: ID!

  """String representing the object's type."""
  object: String!
  subscriptions: [_Subscription!]!
}

"""DateTime custom scalar type"""
scalar DateTime

type Dob {
  day: Int
  month: Int
  year: Int
}

type FeeDetails {
  amount: Int
  application: String
  currency: String
  description: String
  id: String
  type: String
}

type Invoice {
  amount_due: Int!
  amount_paid: Int!
  id: ID
  lines: [InvoiceLineItem!]!
}

type InvoiceLineItem implements Node {
  amount: Int!
  currency: String!

  """Unique identifier for the object."""
  id: ID!

  """String representing the object's type."""
  object: String!
  quantity: Int!
}

enum LEGAL_ENTITY_TYPE {
  company
  individual
}

type LegalEntity {
  additional_owners: [AdditionalOwner!]!
  address: Address
  dob: Dob
  first_name: String
  last_name: String
  maiden_name: String
  personal_address: Address
  personal_id_number_provided: Boolean
  type: LEGAL_ENTITY_TYPE
}

"""A Node is a resource with a globally unique identifier"""
interface Node {
  """Unique identifier for the object."""
  id: ID!

  """String representing the object's type."""
  object: String!
}

type Plan implements Node {
  amount: Int!
  currency: String!
  formattedAmount: String!

  """Unique identifier for the object."""
  id: ID!

  """String representing the object's type."""
  object: String!
  product: Product!
}

type Product implements Node {
  """Unique identifier for the object."""
  id: ID!
  name: String!

  """String representing the object's type."""
  object: String!
  plans: [Plan!]!
  type: String!
}

type Query {
  account(id: ID!): Account
  accounts: [Account!]!
  charge(id: ID!): Charge
  charges: [Charge!]!
  countrySpecs(country: String!): CountrySpec
  customer(id: ID!): Customer
  customers(endingBefore: String, limit: Int, startingAfter: String): [Customer!]!
  invoice(id: ID!): Invoice
  invoices: [Invoice!]!
  plan(id: ID!): Plan
  plans: [Plan!]!
  platform: Account!
  product(id: ID!): Product
  products: [Product!]!
  subscription(id: ID!): _Subscription
  subscriptions: [_Subscription!]!
  upcomingInvoice(customerId: ID!): Invoice
}

type VerificationFields {
  additional: [String]
  minimum: [String]
}
